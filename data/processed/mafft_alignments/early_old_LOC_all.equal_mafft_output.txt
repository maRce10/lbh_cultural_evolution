outputhat23=16
treein = 0
compacttree = 0
stacksize: 8192 kb
nalphabets = 256
Score(s=0x73,s=0x73)=1.000000
Score(u=0x75,s=0x73)=1.000000
Score(p=0x70,s=0x73)=1.000000
Score(m=0x6d,s=0x73)=1.000000
Score(f=0x66,s=0x73)=1.000000
Score(d=0x64,s=0x73)=1.000000
Score(s=0x73,u=0x75)=1.000000
Score(u=0x75,u=0x75)=1.000000
Score(p=0x70,u=0x75)=1.000000
Score(m=0x6d,u=0x75)=1.000000
Score(f=0x66,u=0x75)=1.000000
Score(d=0x64,u=0x75)=1.000000
Score(s=0x73,p=0x70)=1.000000
Score(u=0x75,p=0x70)=1.000000
Score(p=0x70,p=0x70)=1.000000
Score(m=0x6d,p=0x70)=1.000000
Score(f=0x66,p=0x70)=1.000000
Score(d=0x64,p=0x70)=1.000000
Score(s=0x73,m=0x6d)=1.000000
Score(u=0x75,m=0x6d)=1.000000
Score(p=0x70,m=0x6d)=1.000000
Score(m=0x6d,m=0x6d)=1.000000
Score(f=0x66,m=0x6d)=1.000000
Score(d=0x64,m=0x6d)=1.000000
Score(s=0x73,f=0x66)=1.000000
Score(u=0x75,f=0x66)=1.000000
Score(p=0x70,f=0x66)=1.000000
Score(m=0x6d,f=0x66)=1.000000
Score(f=0x66,f=0x66)=1.000000
Score(d=0x64,f=0x66)=1.000000
Score(s=0x73,d=0x64)=1.000000
Score(u=0x75,d=0x64)=1.000000
Score(p=0x70,d=0x64)=1.000000
Score(m=0x6d,d=0x64)=1.000000
Score(f=0x66,d=0x64)=1.000000
Score(d=0x64,d=0x64)=1.000000

Unrealistic scoring matrix.  Give larger positive values to matches (A/A, B/B, etc).

