
grd <- grd[order(grd$lek),]

# remove "old" combinations without data before 2000s
for (i in sel_leks)
  if (!any(yrs$year[yrs$lek == i] < 2000))
    grd <- grd[!(grd$use_old_fossils == "old" & grd$lek == i),]

grd$output <- apply(grd, 1, paste, collapse = "_")

# remove leks with output
current.output <- list.files(pattern = "posterior.var",
             path = "./output/revbayes",
             recursive = TRUE)

done <- unique(sapply(current.output, function(x)
    paste(strsplit(x, "_", fixed = TRUE, "[[", 1)[[1]][1:5], collapse = "_"), USE.NAMES = FALSE))

grd <- grd[grd$output %in% c("CCE_all.equal_new_all_global", "CCE_all.equal_old_early_global", "CCE_optimal_new_all_global", "CCE_optimal_old_early_global", "CCE_prank_new_all_global", "CCE_prank_old_all_global"), ]

# grd <- grd[!grd$output %in% done, , drop = FALSE]

for (x in 1:nrow(grd)) {

  print(grd[x,])
  
  yrs.lek <- yrs[yrs$lek == grd$lek[x], ]
  
  if (grd$use_all_fossils[x] == "all")
    last.year.songs <-
    yrs.lek$song.type.year[yrs.lek$year == max(yrs.lek$year)] else {
    last.year.songs <- vector()
    for (i in yrs.lek$song.type[yrs.lek$year == max(yrs.lek$year)]) {
      Y <- yrs.lek[yrs.lek$song.type == i,]
      last.year.songs <-
        c(last.year.songs, Y$song.type.year[which.min(Y$year)])
    }
  }
  
  last.year.songs <- paste0(paste0('"', last.year.songs), '"')
  
  last.year.songs <-
    paste0("clade(", paste0(last.year.songs, collapse = ", "), ")")
  
  nx <-
    paste0(
      "./data/processed/nexus/",
      grd$lek[x],
      "_",
      grd$alignment[x],
      "_",
      grd$use_all_fossils[x],
      "_",
      grd$use_old_fossils[x],
      "_alignment.nex"
    )
  
  tsv <-
    paste0(
      "./data/processed/fossils/",
      grd$lek[x],
      "_taxa_",
      grd$use_all_fossils[x],
      "_",
      grd$use_old_fossils[x],
      ".tsv"
    )
  
  templ <- readLines("./source/template.Rev")
  templ[1] <- gsub("aligment.name", nx, templ[1])
  templ[2] <- gsub("tsv.file", tsv, templ[2])
  templ[4] <-
    gsub("output.base.name",
         file.path("./output/revbayes", grd$output[x]),
         templ[4])
  templ[10] <- gsub("LAST.SONG.TYPES", last.year.songs, templ[10])
  templ[12] <-
    if (grd$branch_rate_model[x] == "global")
      'source("./source/Specimens_control_global.Rev")' else
    'source("./source/Specimens_control_uexp.Rev")'
  
  fl.nm.rb <- paste0("./source/", grd$output[x], ".Rev")
  
  # resave template
  writeLines(templ, con = fl.nm.rb)
  
  cll <-
    paste0("mpirun -np 10 ~/revbayes-master/projects/cmake/rb-mpi ",
           fl.nm.rb)
  
  system(cll)
  
  print(grd[x,])
  
  print("##################### done ############")
  
  print(paste(nrow(grd) - x, "rows left"))
  
  Sys.sleep(10)
}
